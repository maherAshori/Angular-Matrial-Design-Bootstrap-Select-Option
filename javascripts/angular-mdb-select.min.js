//angular mdb select v 1.0.2
var angularMdbSelect = angular.module("angularMdbSelect", []); angularMdbSelect.filter("to_trusted", ["$sce", function (e) { return function (n) { return e.trustAsHtml(n) } }]), angularMdbSelect.directive("mdbSelect", ["$filter", function (e) { return { restric: "E", require: "^ngModel", template: '<div ng-mouseleave="change = false" ng-click="multiple ? change = true:change = !change" ng-class="{\'open\': change}" class="mdb-select"><label ng-bind-html="label | to_trusted"></label><div ng-show="bind === undefined && multiBind === undefined" class="active" ng-bind="\'undefined\'"></div><div ng-hide="bind === undefined && multiBind === undefined" class="active">{{activeOption}} <small>{{languages[lang].multiple}}</small></div><ul ng-hide="bind === undefined && multiBind === undefined"><li ng-if="multiple === undefined" ng-repeat="item in list" ng-click="select(item)" ng-hide="selected === item"><span ng-if="multiBind === undefined" ng-bind="item[bind]"></span><span ng-if="multiBind !== undefined" ng-repeat="toBind in multiBind" ng-bind="\' \' + item[toBind]"></span></li><li ng-if="multiple" ng-repeat="item in list" ng-class="{\'active\':item.set}" ng-click="multipleSelect(item)"><span ng-if="multiBind === undefined" ng-bind="item[bind]"></span><span ng-if="multiBind !== undefined" ng-repeat="toBind in multiBind" ng-bind="\' \' + item[toBind]"></span></li></ul></div> ', scope: { list: "=", label: "@", model: "@", multiBind: "=", multiple: "=", bind: "@", help: "@?", lang: "@" }, link: function (n, i, l, t) { if (angular.isUndefined(n.help)) { if (angular.isUndefined(n.bind) && angular.isUndefined(n.multiBind)) return console.error("data-bind OR data-multi-bind not found in your element"), !1; if (n.languages = { en: { multiple: "items has been selected." }, fa: { multiple: "گزینه انتخاب شده است." } }, angular.isUndefined(n.lang) && (n.lang = "en"), angular.isUndefined(n.multiple)) angular.isUndefined(n.multiBind) ? n.$watch(t.$modelValue, function () { angular.isUndefined(n.model) ? angular.isUndefined(t.$viewValue) || (n.selected = t.$modelValue, n.activeOption = t.$modelValue[n.bind], t.$setViewValue(t.$modelValue)) : angular.isUndefined(t.$viewValue) || (n.selected = t.$modelValue, console.log(t.$modelValue), n.activeOption = t.$modelValue[n.bind], t.$setViewValue(t.$modelValue[n.model])) }, !0) : (1 === n.multiBind.length && (console.warn("=> ng-model='" + l.ngModel + "'"), console.info("=> use 'data-multi-bind' to bind more then one params! \n=> use 'data-bind' to bind only one param.")), n.$watch(t.$modelValue, function () { for (var e = "", i = 0; i < n.multiBind.length; i++) e += t.$modelValue[n.multiBind[i]] + " "; angular.isUndefined(n.model) ? (n.selected = t.$modelValue, t.$setViewValue(t.$modelValue)) : (n.selected = t.$modelValue, t.$setViewValue(t.$modelValue[n.model])), n.activeOption = e }, !0)), n.select = function (e) { if (angular.isUndefined(n.model) ? t.$setViewValue(e) : t.$setViewValue(e[n.model]), angular.isUndefined(n.multiBind)) n.activeOption = e[n.bind]; else { for (var i = "", l = 0; l < n.multiBind.length; l++) i += e[n.multiBind[l]] + " "; n.activeOption = i } n.selected = e }; else { var d = e("filter")(n.list, { set: !0 }); n.activeOption = d.length, t.$setViewValue(d), n.multipleSelect = function (i) { i.set = !i.set, d = e("filter")(n.list, { set: !0 }), n.activeOption = d.length, t.$setViewValue(d) } } } else console.warn("******mdbSelect Helper****** \n"), console.info("Example:\n=>Controller\n       $scope.array = [{fName: 'jason', lName: 'bourne'},{fName: 'james', lName: 'bond'}]\n       $scope.movies = {}\n       //data-model is removeable, if you want to return object do not use it\n       //you can use one of 'data-bind' OR 'data-multi-bind'\n\n=>Html: \n       <mdb-select \n       ng-model=\"movies\" \n       data-list=\"array\" \n       data-model=\"if null return object\" \n       data-bind=\"fName\" \n       data-multi-bind=\"['fName','lName']\">\n       </mdb-select>"), console.warn("******mdbSelect Helper****** \n") } } }]);