//angular mdb select v 1.0.0
var angularMdbSelect = angular.module("angularMdbSelect", []); angularMdbSelect.directive("mdbSelect", function () { return { restric: "E", require: "^ngModel", template: '<div ng-mouseleave="change = false" ng-click="change = !change" ng-class="{\'open\': change}" class="mdb-select"><label ng-bind="label"></label><div ng-show="bind === undefined && multiBind === undefined" class="active" ng-bind="\'undefined\'"></div><div ng-hide="bind === undefined && multiBind === undefined" class="active" ng-bind="activeOption"></div><ul ng-hide="bind === undefined && multiBind === undefined"><li ng-repeat="item in list" ng-click="select(item)" ng-hide="selected === item"><span ng-if="multiBind === undefined" ng-bind="item[bind]"></span><span ng-if="multiBind !== undefined" ng-repeat="toBind in multiBind" ng-bind="\' \' + item[toBind]"></span></li></ul></div> ', scope: { list: "=", label: "@", model: "@", multiBind: "=", bind: "@", help: "@?" }, link: function (e, n, i, l) { if (angular.isUndefined(e.help)) { if (angular.isUndefined(e.bind) && angular.isUndefined(e.multiBind)) return console.error("data-bind OR data-multi-bind not found in your element"), !1; angular.isUndefined(e.multiBind) ? e.$watch(l.$modelValue, function () { angular.isUndefined(e.model) ? (e.selected = l.$modelValue, e.activeOption = l.$modelValue[e.bind], l.$setViewValue(l.$modelValue)) : (e.selected = l.$modelValue, e.activeOption = l.$modelValue[e.bind], l.$setViewValue(l.$modelValue[e.model])) }, !0) : (1 === e.multiBind.length && (console.warn("=> ng-model='" + i.ngModel + "'"), console.info("=> use 'data-multi-bind' to bind more then one params! \n=> use 'data-bind' to bind only one param.")), e.$watch(l.$modelValue, function () { for (var n = "", i = 0; i < e.multiBind.length; i++) n += l.$modelValue[e.multiBind[i]] + " "; angular.isUndefined(e.model) ? (e.selected = l.$modelValue, l.$setViewValue(l.$modelValue)) : (e.selected = l.$modelValue, l.$setViewValue(l.$modelValue[e.model])), e.activeOption = n }, !0)), e.select = function (n) { if (angular.isUndefined(e.model) ? l.$setViewValue(n) : l.$setViewValue(n[e.model]), angular.isUndefined(e.multiBind)) e.activeOption = n[e.bind]; else { for (var i = "", d = 0; d < e.multiBind.length; d++) i += n[e.multiBind[d]] + " "; e.activeOption = i } e.selected = n } } else console.warn("******mdbSelect Helper****** \n"), console.info("Example:\n=>Controller\n       $scope.array = [{fName: 'jason', lName: 'bourne'},{fName: 'james', lName: 'bond'}]\n       $scope.movies = {}\n       //data-model is removeable, if you want to return object do not use it\n       //you can use one of 'data-bind' OR 'data-multi-bind'\n\n=>Html: \n       <mdb-select \n       ng-model=\"movies\" \n       data-list=\"array\" \n       data-model=\"if null return object\" \n       data-bind=\"fName\" \n       data-multi-bind=\"['fName','lName']\">\n       </mdb-select>"), console.warn("******mdbSelect Helper****** \n") } } });